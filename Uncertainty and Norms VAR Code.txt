#########################################################################################################################################################################################
# This code is designed to produce all of the VAR elements of the paper "Uncertainty, volatility and the persistence norms of financial time series"					#
# Prior to running the code please make sure that you have the listed packages installed and available to your R installation. Also prepare the working directory.			#
#																							#
# If you make use of the code then please do not forget to cite the paper to which this code relates											#
#																							#
# Suggested citation: Rudkin, S., Qiu, W., and Dlotko, P. (2023) "Uncertainty, volatility and the persistence norms of financial time series", Expert Systems with Applications, 119894 #			
#########################################################################################################################################################################################

### Packages

library(TDA)
library(readstata13)
library(dplyr)
library(ggplot2)
library(lubridate)
library(lmtest)
library(sandwich)
library(car)
library(rmgarch)
library(parallel)
library(vars)
library(bruceR)

c1=makePSOCKcluster(10) ### This should be adjusted for your computer or dropped

maxdimension<-1
maxscale<-200


#################################################################################################################################################################################################################
# In order to use this code you will need a file with the stock index returns from Yahoo Finance and a single csv containing the uncertainty indexes prepared according to the file "uncertaintypre.txt"	#
#																										#
# Please replace the file names with those that you have created. Likewise set the working directory accordingly.												#
# 																										#
# This first section is a repeat of the code for the contemporaneous estimation. You may alternatively read in the .dta files created										#
#################################################################################################################################################################################################################

setwd("D://uncertainty/")

### Read in uncertainty

dtu<-read.table("uncertainty1221.csv",sep=",",header=TRUE)

### Correct format of date variable name

names(dtu)<-c("dt",names(dtu)[2:19])

### Read in stock data

dt2<-read.dta13("cloud4.dta")

### Create a variable ymo of the form 199912 to identify each month

dtu$ymo<-paste0(substr(dtu$dt,7,10),substr(dtu$dt,4,5))
dt2$ymo<-as.numeric(as.character(paste0(substr(dt2$dt,1,4),substr(dt2$dt,6,7))))

dt2t<-as.data.frame(table(dt2$ymo)) ### Table of months
names(dt2t)<-c("ymo","freq")
dt2t$ymo<-as.numeric(as.character(dt2t$ymo))
x401<-nrow(dt2t) ### Identifies number of months in the sample

dcolc<-matrix(0,nrow=x401,ncol=17) ### Collection matrix for 1 month
dcold<-matrix(0,nrow=x401,ncol=17) ### Collection matrix for 1 month
dcole<-matrix(0,nrow=x401,ncol=17) ### Collection matrix for 1 month
dcolf<-matrix(0,nrow=x401,ncol=17) ### Collection matrix for 1 month

##################################################################################################################
# This next block of code is a loop which will compute the persistence norms for the relevant number of months	 #
# Please note that this loop does take time to execute and will depend on the speed of your computer             #
# Time may be saved by not running all four cloud lengths in the same loop                                       #
##################################################################################################################

for(i in 13:x401){
   x001<-i-3
   x002<-i-6
   x003<-i-12
   tempc<-subset(dt2,dt2$ymo==dt2t$ymo[i]) ### Makes 1 month subset
   tempd<-subset(dt2,dt2$ymo<=dt2t$ymo[i])
   tempd<-subset(tempd,tempd$ymo>dt2t$ymo[x001]) ### Makes 3 month measure
   tempe<-subset(dt2,dt2$ymo<=dt2t$ymo[i])
   tempe<-subset(tempe,tempe$ymo>dt2t$ymo[x002]) ### Makes 6 month measure
   tempf<-subset(dt2,dt2$ymo<=dt2t$ymo[i])
   tempf<-subset(tempf,tempf$ymo>dt2t$ymo[x003]) ### Makes 12 month measure
   x005<-i
   x<-tempc[,2:5] ### returns data is in columns 2 3 4 and 5
   Diag <- ripsDiag(X=x, maxdimension, maxscale, library="GUDHI", printProgress=FALSE)
   dt1<-as.data.frame(print(Diag[["diagram"]]) )
   dt1<-dt1[2:nrow(dt1),]
   if(nrow(dt1)>1){names(dt1)<-c("dim","b","d") ### Only runs this loop if at least one feature is identified
   dt1$pers<-dt1$d-dt1$b ### pers is the time between birth and death of the feature
   dt1$pers2<-dt1$pers^2 ### square for L2 norm
   dt1<-dt1[!is.na(dt1["pers"]),]
   dt1a<-subset(dt1,dt1$dim==0) ### Identifies the dimension 0 features
   dt1a<-dt1a[-1] ### Drop first line because the first feature is always infinitely lived (up to the maximum scale specified at the start of the code
   dt1b<-subset(dt1,dt1$dim==1) ### Identifies the dimension 1 features
   dcolc[x005,3]<-dt2t$ymo[i]
   dcolc[x005,4]<-sum(dt1a$pers) ### Total L1 norm for dimension 0
   dcolc[x005,5]<-sqrt(sum(dt1a$pers2)) ### Total L2 norm for dimension 0
   dcolc[x005,6]<-ifelse(nrow(dt1b)==0,0,sum(dt1b$pers)) ### L1 norm for dimension 1
   dcolc[x005,7]<-ifelse(nrow(dt1b)==0,0,sqrt(sum(dt1b$pers2))) ### L2 norm for dimension 1
   dcolc[x005,8]<-sd(x[,1]) ### Standard deviations for each of the four series
   dcolc[x005,9]<-sd(x[,2])
   dcolc[x005,10]<-sd(x[,3])
   dcolc[x005,11]<-sd(x[,4])
   dcolc[x005,12]<-cor(x[,1],x[,2]) ### Pairwise correlations for each possible pairing
   dcolc[x005,13]<-cor(x[,1],x[,3])
   dcolc[x005,14]<-cor(x[,1],x[,4])
   dcolc[x005,15]<-cor(x[,2],x[,3])
   dcolc[x005,16]<-cor(x[,2],x[,4])
   dcolc[x005,17]<-cor(x[,3],x[,4])
   dcolc[x005,1]<-mean(dcolc[x005,8:11]) # Average sd
   dcolc[x005,2]<-mean(dcolc[x005,12:17]) # Average cor
   }
   x<-tempd[,2:5]
   Diag <- ripsDiag(X=x, maxdimension, maxscale, library="GUDHI", printProgress=FALSE)
   dt1<-as.data.frame(print(Diag[["diagram"]]) )
   dt1<-dt1[2:nrow(dt1),]
   if(nrow(dt1)>1){names(dt1)<-c("dim","b","d")
   dt1$pers<-dt1$d-dt1$b
   dt1$pers2<-dt1$pers^2
   dt1<-dt1[!is.na(dt1["pers"]),]
   dt1a<-subset(dt1,dt1$dim==0)
   dt1a<-dt1a[-1]
   dt1b<-subset(dt1,dt1$dim==1)
   dcold[x005,3]<-dt2t$ymo[i]
   dcold[x005,4]<-sum(dt1a$pers)
   dcold[x005,5]<-sqrt(sum(dt1a$pers2))
   dcold[x005,6]<-ifelse(nrow(dt1b)==0,0,sum(dt1b$pers))
   dcold[x005,7]<-ifelse(nrow(dt1b)==0,0,sqrt(sum(dt1b$pers2)))
   dcold[x005,8]<-sd(x[,1])
   dcold[x005,9]<-sd(x[,2])
   dcold[x005,10]<-sd(x[,3])
   dcold[x005,11]<-sd(x[,4])
   dcold[x005,12]<-cor(x[,1],x[,2])
   dcold[x005,13]<-cor(x[,1],x[,3])
   dcold[x005,14]<-cor(x[,1],x[,4])
   dcold[x005,15]<-cor(x[,2],x[,3])
   dcold[x005,16]<-cor(x[,2],x[,4])
   dcold[x005,17]<-cor(x[,3],x[,4])
   dcold[x005,1]<-mean(dcold[x005,8:11]) # Average sd
   dcold[x005,2]<-mean(dcold[x005,12:17]) # Average cor
   }
   x<-tempe[,2:5]
   Diag <- ripsDiag(X=x, maxdimension, maxscale, library="GUDHI", printProgress=FALSE)
   dt1<-as.data.frame(print(Diag[["diagram"]]) )
   dt1<-dt1[2:nrow(dt1),]
   if(nrow(dt1)>1){names(dt1)<-c("dim","b","d")
   dt1$pers<-dt1$d-dt1$b
   dt1$pers2<-dt1$pers^2
   dt1<-dt1[!is.na(dt1["pers"]),]
   dt1a<-subset(dt1,dt1$dim==0)
   dt1a<-dt1a[-1]
   dt1b<-subset(dt1,dt1$dim==1)
   dcole[x005,3]<-dt2t$ymo[i]
   dcole[x005,4]<-sum(dt1a$pers)
   dcole[x005,5]<-sqrt(sum(dt1a$pers2))
   dcole[x005,6]<-ifelse(nrow(dt1b)==0,0,sum(dt1b$pers))
   dcole[x005,7]<-ifelse(nrow(dt1b)==0,0,sqrt(sum(dt1b$pers2)))
   dcole[x005,8]<-sd(x[,1])
   dcole[x005,9]<-sd(x[,2])
   dcole[x005,10]<-sd(x[,3])
   dcole[x005,11]<-sd(x[,4])
   dcole[x005,12]<-cor(x[,1],x[,2])
   dcole[x005,13]<-cor(x[,1],x[,3])
   dcole[x005,14]<-cor(x[,1],x[,4])
   dcole[x005,15]<-cor(x[,2],x[,3])
   dcole[x005,16]<-cor(x[,2],x[,4])
   dcole[x005,17]<-cor(x[,3],x[,4])
   dcole[x005,1]<-mean(dcole[x005,8:11]) # Average sd
   dcole[x005,2]<-mean(dcole[x005,12:17]) # Average cor
   }
   x<-tempf[,2:5]
   Diag <- ripsDiag(X=x, maxdimension, maxscale, library="GUDHI", printProgress=FALSE)
   dt1<-as.data.frame(print(Diag[["diagram"]]) )
   dt1<-dt1[2:nrow(dt1),]
   if(nrow(dt1)>1){names(dt1)<-c("dim","b","d")
   dt1$pers<-dt1$d-dt1$b
   dt1$pers2<-dt1$pers^2
   dt1<-dt1[!is.na(dt1["pers"]),]
   dt1a<-subset(dt1,dt1$dim==0)
   dt1a<-dt1a[-1]
   dt1b<-subset(dt1,dt1$dim==1)
   dcolf[x005,3]<-dt2t$ymo[i]
   dcolf[x005,4]<-sum(dt1a$pers)
   dcolf[x005,5]<-sqrt(sum(dt1a$pers2))
   dcolf[x005,6]<-ifelse(nrow(dt1b)==0,0,sum(dt1b$pers))
   dcolf[x005,7]<-ifelse(nrow(dt1b)==0,0,sqrt(sum(dt1b$pers2)))
   dcolf[x005,8]<-sd(x[,1])
   dcolf[x005,9]<-sd(x[,2])
   dcolf[x005,10]<-sd(x[,3])
   dcolf[x005,11]<-sd(x[,4])
   dcolf[x005,12]<-cor(x[,1],x[,2])
   dcolf[x005,13]<-cor(x[,1],x[,3])
   dcolf[x005,14]<-cor(x[,1],x[,4])
   dcolf[x005,15]<-cor(x[,2],x[,3])
   dcolf[x005,16]<-cor(x[,2],x[,4])
   dcolf[x005,17]<-cor(x[,3],x[,4])
   dcolf[x005,1]<-mean(dcolf[x005,8:11]) # Average sd
   dcolf[x005,2]<-mean(dcolf[x005,12:17]) # Average cor
 }
}

### Convert collected data to data frame 

dcolc<-as.data.frame(dcolc) 
dcold<-as.data.frame(dcold)
dcole<-as.data.frame(dcole)
dcolf<-as.data.frame(dcolf)

### Add names to dcol  dataframes ###

names(dcolc)<-c("msdc","mcorc","ymo","l01c2","l02c2","l11c2","l12c2","sd1c2","sd2c2","sd3c2","sd4c2","cor11c","cor12c","cor13c","cor23c","cor24c","cor34c")
names(dcold)<-c("msdd","mcord","ymo","l01d2","l02d2","l11d2","l12d2","sd1d2","sd2d2","sd3d2","sd4d2","cor11d","cor12d","cor13d","cor23d","cor24d","cor34d")
names(dcole)<-c("msde","mcore","ymo","l01e2","l02e2","l11e2","l12e2","sd1e2","sd2e2","sd3e2","sd4e2","cor11e","cor12e","cor13e","cor23e","cor24e","cor34e")
names(dcolf)<-c("msdf","mcorf","ymo","l01f2","l02f2","l11f2","l12f2","sd1f2","sd2f2","sd3f2","sd4f2","cor11f","cor12f","cor13f","cor23f","cor24f","cor34f")

### Formatting of date. All set to 28th as this is the last number in every month

dcolc$dt<-as.Date(paste0("28-",substr(dcolc$ymo,5,6),"-",substr(dcolc$ymo,1,4)),format="%d-%m-%Y")
dcold$dt<-as.Date(paste0("28-",substr(dcold$ymo,5,6),"-",substr(dcold$ymo,1,4)),format="%d-%m-%Y")
dcole$dt<-as.Date(paste0("28-",substr(dcole$ymo,5,6),"-",substr(dcole$ymo,1,4)),format="%d-%m-%Y")
dcolf$dt<-as.Date(paste0("28-",substr(dcolf$ymo,5,6),"-",substr(dcolf$ymo,1,4)),format="%d-%m-%Y")

### Remove any redundant lines from the dataframes

dcolca<-subset(dcolc,dcolc$sd1c2!=0)
dcolda<-subset(dcold,dcold$sd1d2!=0)
dcolea<-subset(dcole,dcole$sd1e2!=0)
dcolfa<-subset(dcolf,dcolf$sd1f2!=0)

### Merge with uncertainty data

dtuca<-merge(dtu,dcolca,by="ymo")
dtuda<-merge(dtu,dcolda,by="ymo")
dtuea<-merge(dtu,dcolea,by="ymo")
dtufa<-merge(dtu,dcolfa,by="ymo")

###################################
# If already created you may skip the above section and directly read in the .dta files
#
# dtuca<-read.dta13("dtuca2005222.dta")
# dtuda<-read.dta13("dtuda2005222.dta")
# dtuea<-read.dta13("dtuea2005222.dta")
# dtufa<-read.dta13("dtufa2005222.dta")
######################

# The process is the same for each cloud length / persistence norm combination
# We create a reduced dataset with just 3 variables

vlag1<-matrix(0,nrow=2,ncol=8) # Matrix to store lags selected for granger
vlag2<-matrix(0,nrow=2,ncol=8) # Matrix to store lags selected for VAR model
port1<-matrix(0,nrow=2,ncol=8) # Matrix to store p values for seasonality test
arch1<-matrix(0,nrow=2,ncol=8) # Matrix to store p values for arch test
dcct1<-matrix(0,nrow=2,ncol=8) # Matrix to store p values for DCC test

#################################################
# L1 norm 1 -month cloud  Financial uncertainty #
#################################################

df1<-as.data.frame(cbind.data.frame(dtuca$l11c2,dtuca$finunc1,dtuca$msdc)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003finl11a<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "a" for the 1-month cloud

vlag1[1,1]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103finl11a<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[1,1]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[1,1]<-st001$serial[3] # store p.value from seasonality test
arch1[1,1]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("finl11aPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("finl11aPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("finl11aPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("finl11aUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("finl11aUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("finl11aUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("finl11aMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("finl11aMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("finl11aMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[1,1]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11aDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11aDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11aDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

finl11afit1<-fit1 # Store the DCC fit

#################################################
# L1 norm 3 -month cloud  Financial uncertainty #
#################################################
df1<-as.data.frame(cbind.data.frame(dtuda$l11d2,dtuda$finunc1,dtuda$msdd)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003finl11b<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[1,2]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103finl11b<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[1,2]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[2]<-st001$serial[3] # store p.value from seasonality test
arch1[2]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("finl11bPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("finl11bPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("finl11bPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("finl11bUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("finl11bUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("finl11bUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("finl11bMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("finl11bMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("finl11bMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[1,2]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11bDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11bDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11bDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

finl11bfit1<-fit1 # Store the DCC fit

df1<-as.data.frame(cbind.data.frame(dtuea$l11e2,dtuea$finunc1,dtuea$msde)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003finl11c<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[1,3]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103finl11c<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[1,3]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[3]<-st001$serial[3] # store p.value from seasonality test
arch1[3]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("finl11cPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("finl11cPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("finl11cPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("finl11cUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("finl11cUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("finl11cUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("finl11cMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("finl11cMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("finl11cMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[1,3]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11cDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11cDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11cDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

finl11cfit1<-fit1 # Store the DCC fit

#################################################
# L1 norm 12 -month cloud  Financial uncertainty #
#################################################

df1<-as.data.frame(cbind.data.frame(dtufa$l11f2,dtufa$finunc1,dtufa$msdf)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003finl11d<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[1,4]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103finl11d<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[1,4]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[4]<-st001$serial[3] # store p.value from seasonality test
arch1[4]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("finl11dPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("finl11dPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("finl11dPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("finl11dUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("finl11dUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("finl11dUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("finl11dMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("finl11dMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("finl11dMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[1,4]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11dDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11dDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl11dDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

finl11dfit1<-fit1 # Store the DCC fit

##############################
# WE MOVE ON TO THE L2 NORMS #
##############################

#################################################
# L2 norm 1 -month cloud  Financial uncertainty #
#################################################

df1<-as.data.frame(cbind.data.frame(dtuca$l12c2,dtuca$finunc1,dtuca$msdc)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003finl12a<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "a" for the 1-month cloud

vlag1[1,5]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103finl12a<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[1,5]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[5]<-st001$serial[3] # store p.value from seasonality test
arch1[5]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("finl12aPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("finl12aPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("finl12aPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("finl12aUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("finl12aUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("finl12aUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("finl12aMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("finl12aMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("finl12aMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[1,5]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12aDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12aDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12aDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

finl12afit1<-fit1 # Store the DCC fit

#################################################
# L2 norm 3 -month cloud  Financial uncertainty #
#################################################
df1<-as.data.frame(cbind.data.frame(dtuda$l12d2,dtuda$finunc1,dtuda$msdd)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003finl12b<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[1,6]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103finl12b<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[1,6]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[6]<-st001$serial[3] # store p.value from seasonality test
arch1[6]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("finl12bPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("finl12bPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("finl12bPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("finl12bUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("finl12bUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("finl12bUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("finl12bMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("finl12bMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("finl12bMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[1,6]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12bDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12bDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12bDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

finl12bfit1<-fit1 # Store the DCC fit

###############################################
# L2 Norm 6-Month Cloud Financial Uncertainty #
###############################################

df1<-as.data.frame(cbind.data.frame(dtuea$l12e2,dtuea$finunc1,dtuea$msde)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003finl12c<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[1,7]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103finl12c<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[1,7]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[7]<-st001$serial[3] # store p.value from seasonality test
arch1[7]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("finl12cPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("finl12cPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("finl12cPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("finl12cUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("finl12cUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("finl12cUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("finl12cMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("finl12cMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("finl12cMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[1,7]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12cDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12cDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12cDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

finl12cfit1<-fit1 # Store the DCC fit

#################################################
# L2 norm 12 -month cloud  Financial uncertainty #
#################################################

df1<-as.data.frame(cbind.data.frame(dtufa$l12f2,dtufa$finunc1,dtufa$msdf)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003finl12d<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[1,8]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103finl12d<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[1,8]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[8]<-st001$serial[3] # store p.value from seasonality test
arch1[8]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("finl12dPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("finl12dPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("finl12dPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("finl12dUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("finl12dUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("finl12dUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("finl12dMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("finl12dMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("finl12dMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[1,8]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12dDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12dDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("finl12dDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

finl12dfit1<-fit1 # Store the DCC fit

##############################################
# NEXT WE CONSIDER MACROECONOMIC UNCERTAINTY #
##############################################

df1<-as.data.frame(cbind.data.frame(dtuca$l11c2,dtuca$macunc1,dtuca$msdc)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003macl11a<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "a" for the 1-month cloud

vlag1[2,1]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103macl11a<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[2,1]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[9]<-st001$serial[3] # store p.value from seasonality test
arch1[9]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("macl11aPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("macl11aPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("macl11aPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("macl11aUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("macl11aUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("macl11aUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("macl11aMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("macl11aMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("macl11aMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[2,1]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11aDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11aDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11aDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

macl11afit1<-fit1 # Store the DCC fit

#################################################
# L1 norm 3 -month cloud  Financial uncertainty #
#################################################
df1<-as.data.frame(cbind.data.frame(dtuda$l11d2,dtuda$macunc1,dtuda$msdd)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003macl11b<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[2,2]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags 

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103macl11b<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[2,2]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[10]<-st001$serial[3] # store p.value from seasonality test
arch1[10]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("macl11bPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("macl11bPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("macl11bPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("macl11bUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("macl11bUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("macl11bUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("macl11bMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("macl11bMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("macl11bMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[2,2]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11bDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11bDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11bDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

macl11bfit1<-fit1 # Store the DCC fit

df1<-as.data.frame(cbind.data.frame(dtuea$l11e2,dtuea$macunc1,dtuea$msde)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003macl11c<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive 

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103macl11c<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[2,3]<-v001 # store lag used for granger test

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[2,3]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[11]<-st001$serial[3] # store p.value from seasonality test
arch1[11]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("macl11cPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("macl11cPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("macl11cPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("macl11cUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("macl11cUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("macl11cUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("macl11cMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("macl11cMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("macl11cMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[2,3]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11cDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11cDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11cDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

macl11cfit1<-fit1 # Store the DCC fit

#################################################
# L1 norm 12 -month cloud  Financial uncertainty #
#################################################

df1<-as.data.frame(cbind.data.frame(dtufa$l11f2,dtufa$macunc1,dtufa$msdf)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003macl11d<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[2,4]<-v001 # store lag used for granger test

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103macl11d<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[2,4]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[12]<-st001$serial[3] # store p.value from seasonality test
arch1[12]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("macl11dPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("macl11dPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("macl11dPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("macl11dUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("macl11dUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("macl11dUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("macl11dMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("macl11dMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("macl11dMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[2,4]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11dDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11dDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl11dDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

macl11dfit1<-fit1 # Store the DCC fit

##############################
# WE MOVE ON TO THE L2 NORMS #
##############################

#################################################
# L2 norm 1 -month cloud  Financial uncertainty #
#################################################

df1<-as.data.frame(cbind.data.frame(dtuca$l12c2,dtuca$macunc1,dtuca$msdc)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003macl12a<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "a" for the 1-month cloud

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103macl12a<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[2,5]<-v001 # store lag used for granger test

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[2,5]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[13]<-st001$serial[3] # store p.value from seasonality test
arch1[13]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("macl12aPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("macl12aPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("macl12aPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("macl12aUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("macl12aUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("macl12aUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("macl12aMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("macl12aMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("macl12aMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[2,5]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12aDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12aDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12aDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

macl12afit1<-fit1 # Store the DCC fit

#################################################
# L2 norm 3 -month cloud  Financial uncertainty #
#################################################
df1<-as.data.frame(cbind.data.frame(dtuda$l12d2,dtuda$macunc1,dtuda$msdd)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003macl12b<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103macl12b<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[2,6]<-v001 # store lag used for granger test

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[2,6]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[14]<-st001$serial[3] # store p.value from seasonality test
arch1[14]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("macl12bPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("macl12bPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("macl12bPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("macl12bUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("macl12bUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("macl12bUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("macl12bMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("macl12bMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("macl12bMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[2,6]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12bDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12bDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12bDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

macl12bfit1<-fit1 # Store the DCC fit

###############################################
# L2 Norm 6-Month Cloud Financial Uncertainty #
###############################################

df1<-as.data.frame(cbind.data.frame(dtuea$l12e2,dtuea$macunc1,dtuea$msde)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003macl12c<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

var9<-VAR(df1,p=12,type="const",season=12) ### Fit Naive with 12 lags

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103macl12c<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[2,7]<-v001 # store lag used for granger test

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[2,7]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[15]<-st001$serial[3] # store p.value from seasonality test
arch1[15]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("macl12cPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("macl12cPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("macl12cPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("macl12cUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("macl12cUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("macl12cUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("macl12cMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("macl12cMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("macl12cMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[2,7]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12cDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12cDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12cDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

macl12cfit1<-fit1 # Store the DCC fit

#################################################
# L2 norm 12 -month cloud  Financial uncertainty #
#################################################

df1<-as.data.frame(cbind.data.frame(dtufa$l12f2,dtufa$macunc1,dtufa$msdf)) # Data frame of level variables
df1d<-as.data.frame(diff(as.matrix(df1),lag=1)) # Create first differences

names(df1)<-c("PHN","UNC","MSD") # Name reduced datasets
names(df1d)<-c("PHN","UNC","MSD")

df1<-df1[-1,] # Drop the first observation to make df1 and df1d comparable

# Because the uncertainty index has a unit root we need to create a dataset for VAR modelling with a first difference term

df2<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD)) ### Combine 
names(df2)<-c("PHN","UNC","MSD")

df2a<-as.data.frame(cbind.data.frame(df1$PHN,df1d$UNC,df1$MSD,dtuca$ymo[-1])) ### Combine with YMO but drop first observation 
names(df2a)<-c("PHN","UNC","MSD","YMO")

# Granger causality is based upon the level model

var1<-VARselect(df1,lag.max=12,type="const",season=12) ### df1 is data in levels

v001<-var1$selection[1] ### Set lag according to AIC 

var0<-VAR(df1,p=v001,type="const",season=12) ### Fit Naive 

g001<-granger_causality(var0)

g002<-as.data.frame(g001$result) ### estimates from test

g003<-matrix(0,nrow=9,ncol=1)

g003[1,1]<-paste0(round(g002$Chisq[1],2),g002$sig.Chisq[1])
g003[2,1]<-paste0(round(g002$Chisq[2],2),g002$sig.Chisq[2])
g003[3,1]<-paste0(round(g002$Chisq[3],2),g002$sig.Chisq[3])
g003[4,1]<-paste0(round(g002$Chisq[4],2),g002$sig.Chisq[4])
g003[5,1]<-paste0(round(g002$Chisq[5],2),g002$sig.Chisq[5])
g003[6,1]<-paste0(round(g002$Chisq[6],2),g002$sig.Chisq[6])
g003[7,1]<-paste0(round(g002$Chisq[7],2),g002$sig.Chisq[7])
g003[8,1]<-paste0(round(g002$Chisq[8],2),g002$sig.Chisq[8])
g003[9,1]<-paste0(round(g002$Chisq[9],2),g002$sig.Chisq[9])

g003macl12d<-g003 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

var9<-VAR(df1,p=12,type="const",season=12) ### Fit 12 lag naive

g101<-granger_causality(var9)

g102<-as.data.frame(g101$result) ### estimates from test

g103<-matrix(0,nrow=9,ncol=1)

g103[1,1]<-paste0(round(g102$Chisq[1],2),g102$sig.Chisq[1])
g103[2,1]<-paste0(round(g102$Chisq[2],2),g102$sig.Chisq[2])
g103[3,1]<-paste0(round(g102$Chisq[3],2),g102$sig.Chisq[3])
g103[4,1]<-paste0(round(g102$Chisq[4],2),g102$sig.Chisq[4])
g103[5,1]<-paste0(round(g102$Chisq[5],2),g102$sig.Chisq[5])
g103[6,1]<-paste0(round(g102$Chisq[6],2),g102$sig.Chisq[6])
g103[7,1]<-paste0(round(g102$Chisq[7],2),g102$sig.Chisq[7])
g103[8,1]<-paste0(round(g102$Chisq[8],2),g102$sig.Chisq[8])
g103[9,1]<-paste0(round(g102$Chisq[9],2),g102$sig.Chisq[9])

g103macl12d<-g103 ### Storage for later combining. Name comprises uncertainty measure, persistence norm and "b" for the 3-month cloud

vlag1[2,8]<-v001 # store lag used for granger test

# First VAR model to test. Here using the first difference of uncertainty

var1<-VARselect(df2,lag.max=12,type="const",season=12)

v001<-var1$selection[1] ### Set lag according to AIC 
vlag2[2,8]<-v001 # store lag used in VAR model

var2<-VAR(df2,p=v001,type="const") ### Fit Naive 

st001<-serial.test(var2, lags.pt=13, type="PT.asymptotic") ### Confirm seasonality
at001<-arch.test(var2, lags.multi=13, multivariate.only=TRUE) ### Confirm presence of ARCH effects

port1[16]<-st001$serial[3] # store p.value from seasonality test
arch1[16]<-at001$arch.mul[3] # store p.value from arch effects test

irf001<-irf(var2, impulse = "PHN", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf002<-irf(var2, impulse = "UNC", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)
irf003<-irf(var2, impulse = "MSD", n.ahead=36, response = c("PHN", "UNC", "MSD"), boot = TRUE)

irf001m<-irf001[1] # Store elements of IRF
irf001l<-irf001[2]
irf001u<-irf001[3]

irf001m<-as.data.frame(irf001m) # Convert IRF estimates to data frame
irf001l<-as.data.frame(irf001l)
irf001u<-as.data.frame(irf001u)

names(irf001m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf001l)<-c("PHN","UNC","MSD")
names(irf001u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf001m)
irfl<-irfl-1

irf001m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf001l$month<-seq(0,irfl)
irf001u$month<-seq(0,irfl)

ylimu<-max(irf001u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$PHN)

plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)

png("macl12dPHNPHN.png")
plot(irf001m$month,irf001m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$PHN,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$PHN,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$UNC)

plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)

png("macl12dPHNUNC.png")
plot(irf001m$month,irf001m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$UNC,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$UNC,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf001u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf001l$MSD)

plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)

png("macl12dPHNMSD.png")
plot(irf001m$month,irf001m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf001l$month,irf001l$MSD,lty="dotted",lwd=3)
lines(irf001u$month,irf001u$MSD,lty="dotted",lwd=3)
lines(irf001m$month,irf001m$MSD,lwd=3)
abline(h=0)
dev.off()

irf002m<-irf002[1] # Store elements of IRF
irf002l<-irf002[2]
irf002u<-irf002[3]

irf002m<-as.data.frame(irf002m) # Convert IRF estimates to data frame
irf002l<-as.data.frame(irf002l)
irf002u<-as.data.frame(irf002u)

names(irf002m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf002l)<-c("PHN","UNC","MSD")
names(irf002u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf002m)
irfl<-irfl-1

irf002m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf002l$month<-seq(0,irfl)
irf002u$month<-seq(0,irfl)

ylimu<-max(irf002u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$PHN)

plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)

png("macl12dUNCPHN.png")
plot(irf002m$month,irf002m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$PHN,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$PHN,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$UNC)

plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)

png("macl12dUNCUNC.png")
plot(irf002m$month,irf002m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$UNC,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$UNC,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf002u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf002l$MSD)

plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)

png("macl12dUNCMSD.png")
plot(irf002m$month,irf002m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf002l$month,irf002l$MSD,lty="dotted",lwd=3)
lines(irf002u$month,irf002u$MSD,lty="dotted",lwd=3)
lines(irf002m$month,irf002m$MSD,lwd=3)
abline(h=0)
dev.off()

irf003m<-irf003[1] # Store elements of IRF
irf003l<-irf003[2]
irf003u<-irf003[3]

irf003m<-as.data.frame(irf003m) # Convert IRF estimates to data frame
irf003l<-as.data.frame(irf003l)
irf003u<-as.data.frame(irf003u)

names(irf003m)<-c("PHN","UNC","MSD") # Name IRF variables for plotting
names(irf003l)<-c("PHN","UNC","MSD")
names(irf003u)<-c("PHN","UNC","MSD")

irfl<-nrow(irf003m)
irfl<-irfl-1

irf003m$month<-seq(0,irfl) ### Creates the x axis for the IRF plot
irf003l$month<-seq(0,irfl)
irf003u$month<-seq(0,irfl)

ylimu<-max(irf003u$PHN) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$PHN)

plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)

png("macl12dMSDPHN.png")
plot(irf003m$month,irf003m$PHN,xlab="Month",ylab="PHN",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$PHN,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$PHN,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$PHN,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$UNC) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$UNC)

plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)

png("macl12dMSDUNC.png")
plot(irf003m$month,irf003m$UNC,xlab="Month",ylab="UNC",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$UNC,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$UNC,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$UNC,lwd=3)
abline(h=0)
dev.off()

ylimu<-max(irf003u$MSD) ### Get limits for the plot from the upper and lower bounds
yliml<-min(irf003l$MSD)

plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)

png("macl12dMSDMSD.png")
plot(irf003m$month,irf003m$MSD,xlab="Month",ylab="MSD",type="l",ylim=c(yliml,ylimu))
lines(irf003l$month,irf003l$MSD,lty="dotted",lwd=3)
lines(irf003u$month,irf003u$MSD,lty="dotted",lwd=3)
lines(irf003m$month,irf003m$MSD,lwd=3)
abline(h=0)
dev.off()


# Now the DCC model

dcc001<-DCCtest(df2, garchOrder = c(1,1), n.lags = 1, solver = "solnp", solver.control = list(), cluster = c1, Z = NULL)

dcct1[2,8]<-paste0(round(dcc001$statistic,2),ifelse(dcc001$p.value>0.05,"",ifelse(dcc001$p.value>0.01,"*",ifelse(dcc001$p.value>0.001,"**","***"))))

uspec = multispec(replicate(3, ugarchspec(mean.model = list(armaOrder = c(1,1)))))
dcc1 = dccspec(uspec, VAR = TRUE, lag = 4, lag.max = 12, dccOrder = c(1, 1), distribution = 'mvnorm')
fit1 = dccfit(dcc1, data = df2)
print(fit1)

# Extract the correlations

rho.est.line <- list()
rho.est.line = rcor(fit1) # 

df3a<-cbind(df2a$YMO,rho.est.line[1,2,]) # Correlation between PHN and UNC
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12dDCCPHNUNC.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

df3a<-cbind(df2a$YMO,rho.est.line[1,3,]) # Correlation between PHN and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12dDCCPHNMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()


df3a<-cbind(df2a$YMO,rho.est.line[2,3,]) # Correlation between UNC and MSD
df3a<-as.data.frame(df3a)
names(df3a)<-c("YMO","rhoest")

df3a$dt<-as.Date(paste0(substr(df3a$YMO,1,4),"-",substr(df3a$YMO,5,6),"-28"),format="%Y-%m-%d")

plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")

png("macl12dDCCUNCMSD.png")
plot(df3a$dt,df3a$rhoest,type="l",xlab="Time",ylab="Correlation")
dev.off()

macl12dfit1<-fit1 # Store the DCC fit

###########################################
# Produce the table of granger tests #
######################################

# First we collect the four cloud lengths together

g0041<-cbind(g003finl11a,g003finl11b,g003finl11c,g003finl11d) # L1 Financial
g0042<-cbind(g003finl12a,g003finl12b,g003finl12c,g003finl12d) # L2 Financial
g0043<-cbind(g003macl11a,g003macl11b,g003macl11c,g003macl11d) # L1 Macro
g0044<-cbind(g003macl12a,g003macl12b,g003macl12c,g003macl12d) # L2 Macro

g1041<-cbind(g103finl11a,g103finl11b,g103finl11c,g103finl11d) # L1 Financial
g1042<-cbind(g103finl12a,g103finl12b,g103finl12c,g103finl12d) # L2 Financial
g1043<-cbind(g103macl11a,g103macl11b,g103macl11c,g103macl11d) # L1 Macro
g1044<-cbind(g103macl12a,g103macl12b,g103macl12c,g103macl12d) # L2 Macro

# Bind to make tables

g0051<-cbind(g0041,g0043)
g0052<-cbind(g0042,g0044)
g1051<-cbind(g1041,g1043)
g1052<-cbind(g1042,g1044)

# User defined latex function

latout<-function(data,filename){
 if(missing(filename)) filename<-"latout.txt"
 a001<-nrow(data)
 a002<-ncol(data)
 a003<-a002-1
 mat1<-matrix(0,nrow=a001,ncol=1)
 for(i in 1:a001){
   for(k in 1:a003){
     mat1[i,1]<-paste(mat1[i,1],data[i,k],sep="&")
   }
 }
 for(i in 1:a001){
  mat1[i,1]<-paste0(mat1[i,1],"&",data[i,a002],"\\","\\")
 }
 write.table(as.data.frame(mat1),filename,sep="\n",row.names=FALSE,quote=FALSE)
} 

latout(g0051,"Table5.txt")
latout(g0052,"TableA6.txt")
latout(g1051,"Table512.txt") # Available on request only
latout(g1052,"TableA612.txt") # Available on request only

latout(vlag1,"vlag1.txt")
latout(vlag2,"vlag2.txt")
latout(dcct1,"dcct1.txt")

arch1<-as.data.frame(arch1)
names(arch1)<-c("V1","V2","V3","V4","V5","V6","V7","V8","V9","V10","V11","V12","V13","V14","V15","V16")

arch1a<-arch1[1,1:8]
arch1b<-arch1[1,9:16]

names(arch1a)<-c("V1","V2","V3","V4","V5","V6","V7","V8")
names(arch1b)<-c("V1","V2","V3","V4","V5","V6","V7","V8")

arch1c<-round(arch1a,3)
arch1d<-round(arch1b,3)

arch1e<-rbind(arch1c,arch1d)

latout(arch1e,"arch1e.txt") ### On request


